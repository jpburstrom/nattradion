var inPath = "../data/cellData.tsv".resolveRelative;
var outPath = "../data/cellData.scd".resolveRelative;
var printTemplate = { |obj|
	var template = 	(
	hasFriend:
		"hasFriend: (
		prob: %,
		filter: \"%\",
		modFunc: { |friend|
		}
	)",
	isFriend:
		"isFriend: (
		count: %,
		modFunc: { |count|
		}
	)",
	isBridge:
		"isBridge: (
		count: %,
		modFunc: { |count|
			~template[\\buffer] = (
				file: ~bridgeFiles[count]
			);
		};
	)",
	isOneshot:
		"isOneshot: (
		count: %,
		modFunc: { |count|
			~template[\\buffer] = (
				file: ~oneShotFiles[count]
			);
		};
	)"
);

	var transTemplate = { |obj|
		var out = List();
		obj.do { |k|
			out.add( "\\" ++ k);
		};
		out = "transitions: [" ++  out.join(", ") ++ "]";
	};

	var out = List();

	if (obj.friendProbability ? 0 > 0) {
		out.add(template.hasFriend.format(obj.friendProbability, obj.friendFilter ? ""))
	};

	if (obj.friends ? 0 > 0) {
		out.add(template.isFriend.format(obj.friends));
	};

	if (obj.bridges ? 0 > 0) {
		out.add(template.isBridge.format(obj.bridges));
	};

	if (obj.oneshots ? 0 > 0) {
		out.add(template.isOneshot.format(obj.oneshots));
	};

	if (obj.transitions.notNil) {
		out.add(transTemplate.(obj.transitions));
	};

	"//-----%----- \n%: (\n".format(obj.name, obj.name.split(Char.space)[0].asInteger)
	++
	"\t" ++ out.join(",\n\t")
	++
	"\n)"
};

// printTemplate.((name: "001 Percussion", friendProbability:0.2, friends:2, bridges:1, oneshots:2)).postln;
{
	var orig = TabFileReader.read(inPath, true, false);
	var keys = orig[0].collect(_.asSymbol);
	var rows = orig[1..];
	var out = List();
	var outString, file;

	rows.do { |row|
		var dict = ();
		keys.do { |k, i|
			if (row[i].notNil and: { row[i].isEmpty.not }) {
				var val = row[i];
				if (#[friends, bridges, oneshots, friendProbability].includes(k)) {
					val = val.asFloat;
				};
				dict[k] = val;
			};
		};

		dict[\transitions] = [];

		#[fade, xfade, cut].do { |tr|
			var val = dict[tr];
			if (val.notNil) {
				dict[\transitions] = dict[\transitions].add(tr);
			};
			dict[tr] = nil;
		};
		if (dict[\transitions].isEmpty) {
			dict[\transitions] = [\cut]
		};

		if (dict[\transitions].includes(\cut)) {
			dict[\transitions] = dict[\transitions] ++ #[bridge, oneshot];
		};

		// out[row[0].asString.split(Char.space)[0].asSymbol] = dict
		out.add(printTemplate.(dict));
	};

	outString = "//Cell data generated by sketchy script at tools/cellTSVReader.scd\n(\n";
	outString = outString ++ out.join(",\n") ++ "\n)\n//---EOF---";
	file = File(outPath, "w");
	file.write(outString);
	file.close;

}.value;
